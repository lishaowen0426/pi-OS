.equ .L_CONST_EL2, 0b1000
.equ .L_CONST_CORE_ID_MASK, 0b11
.equ .L_QEMU_CONSOLE, 0x3F201000
.equ .INITIAL_STACK_SIZE, 2
.equ .RWNORMAL ,    0b0000000001100000000000000000000000000000000000000000011100000100
.equ .RONORMAL ,    0b0000000001100000000000000000000000000000000000000000011110000100
.equ .XNORMAL  ,    0b0000000001000000000000000000000000000000000000000000011110000100
.equ .RWXNORMAL ,   0b0000000000000000000000000000000000000000000000000000011100000100
.equ .RWDEVICE ,    0b0000000001100000000000000000000000000000000000000000010000000000
.equ .RODEVICE ,    0b0000000001100000000000000000000000000000000000000000010010000000
.equ .TABLE_ATTR ,  0b0010000000000000000000000000000000000000000000000000010000000000
.equ .RECURSIVE_INDEX, 511
.equ .INDEX_MASK,   0b111111111
.equ .L1_SHIFT, 9 + 9 + 12
.equ .L2_SHIFT, 9 + 12
.equ .L3_SHIFT, 12
.equ .PERIPHERAL_START, 0xFE000000
.equ .PERIPHERAL_END, 0xFFFFFFFF
.equ .TCR_EL1_val, 0b0000000000000000000000000000000010110101000110010011010100011001 /*both ttbr0 and ttbr1 are enabled, see mmu.rs*/ 
.equ .MAIR_EL1_val, 0b0000000000000000000000000000000000000000000000001111111100000100 /*see mmu.rs*/
.equ .SCTLR_EL1_val, 0b0000000000000000000000000000000000000000110001010001100000111101
.equ .HCR_EL2_val, 0b0000000000000000000000000000000010000000000000000000000000000000 /*el1 is aarch64*/ 
.equ .SPSR_EL2_val , 0b0000000000000000000000000000000000000000000000000000001111000101 /*exception returns to EL1 and use SP_EL1*/
.equ .CNTHCTL_EL2_val, 0b0000000000000000000000000000000000000000000000000000000000000011  /*access to the physical timer won't be trapped*/
.equ .CNTVOFF_EL2_val, 0b0000000000000000000000000000000000000000000000000000000000000000 /*offset between the physical and virtual count is 0*/

.equ .L_KERNEL_BASE, 0xFFFFFF8000000000
.equ .L_STACK_MMIO_L1_INDEX, 510
